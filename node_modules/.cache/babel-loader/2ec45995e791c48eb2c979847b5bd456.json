{"ast":null,"code":"var _jsxFileName = \"/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/NewPaletteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { ChromePicker } from 'react-color';\nimport Button from '@material-ui/core/Button';\nimport DragableColorList from './DragableColorList';\nimport { arrayMove } from 'react-sortable-hoc';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle'; // import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 350;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: '64px',\n    alignItems: 'center'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    height: `100vh`,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '90%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  picker: {\n    width: '100% !important',\n    marginTop: '2rem !important'\n  },\n  addColor: {\n    width: '90%',\n    padding: '1rem',\n    marginTop: '1rem',\n    fontSize: '2rem'\n  },\n  colorNameInput: {\n    width: '90%',\n    marginTop: '1rem'\n  },\n  buttons: {\n    width: '100%',\n    marginBottom: '1rem',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  button: {\n    width: '48%'\n  },\n  navBtns: {\n    marginRight: '1 rem'\n  },\n  btn: {\n    margin: '0 0.5rem',\n    textDecoration: 'none'\n  }\n}));\n\nfunction NewPaletteForm(props) {\n  _s();\n\n  console.log(props);\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [colors, setColors] = useState(props.palettes[0].colors);\n  const [currentcolor, setCurrent] = useState(\"teal\");\n  const [newColorName, setnewColorName] = useState(\"\");\n  const [newPaletteName, setnewPaletteName] = useState(\"\");\n  const paletteFull = colors.length >= 20;\n  const [open2, setOpen2] = useState(false);\n  const [formShowing, setformShowing] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen2(true);\n    setformShowing(true);\n  };\n\n  const handleClose = () => {\n    setOpen2(false);\n    setformShowing(true);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const updateCurrentColor = newcolor => {\n    setCurrent(newcolor.hex);\n  };\n\n  const addnewColors = () => {\n    const newcolor = {\n      name: newColorName,\n      color: currentcolor\n    };\n    setColors([...colors, newcolor]);\n    setnewColorName(\"\");\n  };\n\n  const handleChange1 = evt => {\n    setnewColorName(evt.target.value);\n  };\n\n  const handleChange2 = evt => {\n    //console.log(evt);\n    setnewPaletteName(evt.target.value);\n  };\n\n  const savePalette = () => {\n    let newName = newPaletteName;\n    const newPalette = {\n      paletteName: newName,\n      id: newName.toLowerCase().replace(/ /g, \"-\"),\n      colors: colors\n    };\n    props.savePalette(newPalette);\n    props.history.push(\"/\");\n  };\n\n  const handleNewName = () => {\n    setnewPaletteName(newPaletteName);\n  };\n\n  const removeColor = colorName => {\n    const remaining = colors.filter(color => color.name !== colorName);\n    setColors(remaining);\n  };\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => setColors(arrayMove(colors, oldIndex, newIndex));\n\n  const clearPalette = () => {\n    setColors([]);\n  };\n\n  const addRandom = () => {\n    const allColors = props.palettes.map(p => p.colors).flat();\n    let rand = Math.floor(Math.random() * allColors.length);\n    let randomColor = allColors[rand];\n    setColors([...colors, randomColor]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      color: \"default\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, open && classes.hide),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Create a Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navBtns,\n        children: [formShowing && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Dialog, {\n            open: open2,\n            onClose: handleClose,\n            \"aria-labelledby\": \"form-dialog-title\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"form-dialog-title\",\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: savePalette,\n              children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n                children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                  children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: newPaletteName,\n                  onChange: handleChange2,\n                  name: \"newPaletteName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClose,\n                  color: \"primary\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Save Palette\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            className: classes.btn,\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          className: classes.btn,\n          children: \"Open form dialog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Design your Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: clearPalette,\n            children: \"Clear Palette\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addRandom,\n            children: \"Random Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n          classname: classes.picker,\n          color: currentcolor,\n          onChangeComplete: newcolor => updateCurrentColor(newcolor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"newColorName\",\n          variant: \"filled\",\n          className: classes.colorNameInput,\n          value: newColorName,\n          onChange: handleChange1,\n          name: \"newColorName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\" //  type='submit' \n          ,\n          className: classes.addColor,\n          onClick: addnewColors,\n          color: \"primary\",\n          style: {\n            background: paletteFull ? \"grey\" : currentcolor\n          },\n          disabled: paletteFull,\n          children: paletteFull ? \"Palette Full\" : \"Add Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: clsx(classes.content, {\n        [classes.contentShift]: open\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragableColorList, {\n        colors: colors,\n        removeColor: removeColor,\n        axis: \"xy\",\n        onSortEnd: onSortEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewPaletteForm, \"F4kfBNAJ0p1bXn4QarCTX5J5yfo=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = NewPaletteForm;\nexport default NewPaletteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPaletteForm\");","map":{"version":3,"sources":["/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/NewPaletteForm.js"],"names":["React","useState","useEffect","clsx","Link","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChromePicker","Button","DragableColorList","arrayMove","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","flexDirection","justifyContent","height","alignItems","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","flexGrow","contentShift","container","picker","marginTop","addColor","fontSize","colorNameInput","buttons","marginBottom","button","navBtns","btn","margin","textDecoration","NewPaletteForm","props","console","log","classes","open","setOpen","colors","setColors","palettes","currentcolor","setCurrent","newColorName","setnewColorName","newPaletteName","setnewPaletteName","paletteFull","length","open2","setOpen2","formShowing","setformShowing","handleClickOpen","handleClose","handleDrawerOpen","handleDrawerClose","updateCurrentColor","newcolor","hex","addnewColors","name","color","handleChange1","evt","target","value","handleChange2","savePalette","newName","newPalette","paletteName","id","toLowerCase","replace","history","push","handleNewName","removeColor","colorName","remaining","filter","onSortEnd","oldIndex","newIndex","clearPalette","addRandom","allColors","map","p","flat","rand","Math","floor","random","randomColor","paper","background"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport clsx from 'clsx';\nimport {Link} from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'; \nimport {ChromePicker} from 'react-color';\nimport Button from '@material-ui/core/Button';\nimport DragableColorList from './DragableColorList';\nimport {arrayMove} from 'react-sortable-hoc'; \nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    flexDirection:'row',\n    justifyContent:'space-between',\n    height:'64px',\n    alignItems:'center'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    display:'flex',\n    alignItems:'center'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1, \n    height:`100vh`,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  container:{\n      display:'flex',\n      flexDirection:'column',\n      width:'90%',\n      height:'100%',\n      justifyContent:'center',\n      alignItems:'center'\n  },\n  picker:{\n      width:'100% !important',\n      marginTop:'2rem !important',\n\n  },\n  addColor:{\n      width:'90%',\n        padding:'1rem',\n        marginTop:'1rem',\n        fontSize:'2rem'\n  },\n  colorNameInput:{\n      width:'90%',\n      marginTop:'1rem'\n  },\n  buttons:{\n      width:'100%',\n      marginBottom:'1rem',\n      display:'flex',\n      justifyContent:'space-between'\n  },\n  button:{\n      width:'48%'\n  },\n  navBtns:{\n    marginRight:'1 rem',\n\n  },\n  btn:{\n    margin:'0 0.5rem',\n    textDecoration:'none'\n  }\n}));\n\nfunction NewPaletteForm(props) {\n    console.log(props);\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [colors,setColors]=useState(props.palettes[0].colors)\n    const [currentcolor,setCurrent]=useState(\"teal\");\n    const [newColorName,setnewColorName]=useState(\"\");\n    const [newPaletteName,setnewPaletteName]=useState(\"\");\n    const paletteFull=colors.length>=20;\n    const [open2, setOpen2] = useState(false);\n    const [formShowing,setformShowing]=useState(false);\n\n    const handleClickOpen = () => {\n      setOpen2(true);\n      setformShowing(true);\n    };\n  \n    const handleClose = () => {\n      setOpen2(false);\n      setformShowing(true);\n\n    };\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const updateCurrentColor=(newcolor)=>{\n        setCurrent(newcolor.hex);\n    }\n    const addnewColors=()=>{\n        const newcolor={\n            name:newColorName,\n            color:currentcolor  \n        }\n        setColors([...colors,newcolor]);\n        setnewColorName(\"\");\n    }\n\n    const handleChange1=(evt)=>{\n        setnewColorName(evt.target.value);\n    }\n    const handleChange2=(evt)=>{\n        //console.log(evt);\n        setnewPaletteName(evt.target.value);\n    }\n    const savePalette=()=>{\n        let newName=newPaletteName;\n        const newPalette={\n\n            paletteName:newName,\n            id:newName.toLowerCase().replace(/ /g,\"-\"),\n            colors:colors\n        };\n        props.savePalette(newPalette); \n        props.history.push(\"/\");\n    }\n\n    const handleNewName=()=>{\n        setnewPaletteName(newPaletteName);\n    }\n    const removeColor=(colorName)=>{\n        const remaining=colors.filter(color=>color.name!==colorName);\n         setColors(remaining)\n    } \n    const onSortEnd = ({ oldIndex, newIndex }) => setColors(arrayMove(colors, oldIndex, newIndex));\n    const clearPalette=()=>{\n        setColors([]);\n    }\n\n    const addRandom=()=>{\n        const allColors = props.palettes.map(p => p.colors).flat();\n        \n        let rand = Math.floor(Math.random() * allColors.length);\n        let randomColor = allColors[rand];\n        \n        setColors([...colors, randomColor] );\n    } \n    return (\n        <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color='default'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Create a Palette \n          </Typography>\n          \n        </Toolbar>\n        <div className={classes.navBtns}> \n           { formShowing && <div>\n             \n              <Dialog open={open2} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <form onSubmit={savePalette}> \n                <DialogContent>\n                  <DialogContentText>\n                    To subscribe to this website, please enter your email address here. We will send updates\n                    occasionally.\n                  </DialogContentText>\n                  \n                    <input value={newPaletteName} onChange={handleChange2} name='newPaletteName'></input>\n                   \n                  \n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button \n                        variant='contained'  \n                        color='primary' type='submit'>Save Palette</Button>\n                </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n           }\n           \n           \n\n            <Link to=\"/\">\n                <Button variant='contained'  \n                color='secondary' className={classes.btn} >Go Back</Button>\n            </Link>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} className={classes.btn}>\n                Open form dialog\n              </Button>\n\n        </div>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n             <ChevronLeftIcon /> \n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.container}>\n        <Typography variant='h4' gutterBottom>Design your Palette</Typography>\n\n        <div className={classes.buttons}>\n            <Button className={classes.button} variant='contained' color='secondary' onClick={clearPalette}>Clear Palette</Button>\n            <Button className={classes.button} variant='contained' color='primary' onClick={addRandom}>Random Color</Button>\n\n        </div>\n        <ChromePicker  \n            classname={classes.picker}\n            color={currentcolor} \n            onChangeComplete={(newcolor)=>updateCurrentColor(newcolor)} \n            /> \n        <TextField \n            id=\"filled-basic\" \n            label=\"newColorName\" \n            variant=\"filled\" \n            className={classes.colorNameInput} \n            value={newColorName} \n            onChange={handleChange1} name='newColorName'/>\n        <Button \n            variant='contained' \n            //  type='submit' \n            className={classes.addColor}\n            onClick={addnewColors}\n            color='primary' \n            style={{background:paletteFull?\"grey\":currentcolor}} \n            disabled={paletteFull}>\n            {paletteFull?\"Palette Full\":\"Add Color\"}\n            </Button>\n            </div>\n        {/* </form> */}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} /> \n         <DragableColorList \n            colors={colors} \n            removeColor={removeColor}\n            axis='xy'\n            onSortEnd={onSortEnd}\n            />\n      </main>\n    </div>\n    )\n}\n\nexport default NewPaletteForm\n"]},"metadata":{},"sourceType":"module"}