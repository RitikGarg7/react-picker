{"ast":null,"code":"var _jsxFileName = \"/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/Palette.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport './Palette.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Palette(props) {\n  _s();\n\n  const [level, setlevel] = useState(500);\n  const [format, setFormat] = useState(\"hex\");\n  const {\n    colors,\n    paletteName,\n    emoji\n  } = props.palette;\n\n  const handleSlide = newLevel => {\n    setlevel(newLevel);\n  };\n\n  const handleFormat = val => {\n    setFormat(val);\n  };\n\n  const colorBoxes = colors[level].map(color => /*#__PURE__*/_jsxDEV(ColorBox, {\n    background: color[format],\n    name: color.name\n  }, color.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Palette\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      level: level,\n      handleSlide: handleSlide,\n      handleChange: handleFormat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Palette-colors\",\n      children: colorBoxes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"Palette-footer\",\n      children: [paletteName, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"emoji\",\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Palette, \"DfN/zaJxkcdPW1TWGyJC+JNzGEQ=\");\n\n_c = Palette;\nexport default Palette;\n\nvar _c;\n\n$RefreshReg$(_c, \"Palette\");","map":{"version":3,"sources":["/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/Palette.js"],"names":["React","useState","ColorBox","Navbar","Palette","props","level","setlevel","format","setFormat","colors","paletteName","emoji","palette","handleSlide","newLevel","handleFormat","val","colorBoxes","map","color","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,eAAP;;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBN,QAAQ,CAAC,GAAD,CAA/B;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAmBR,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM;AAACS,IAAAA,MAAD;AAAQC,IAAAA,WAAR;AAAoBC,IAAAA;AAApB,MAA2BP,KAAK,CAACQ,OAAvC;;AACA,QAAMC,WAAW,GAAEC,QAAD,IAAY;AAC1BR,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAEC,GAAD,IAAO;AACrBR,IAAAA,SAAS,CAACQ,GAAD,CAAT;AACJ,GAFD;;AAGA,QAAMC,UAAU,GAACR,MAAM,CAACJ,KAAD,CAAN,CAAca,GAAd,CAAkBC,KAAK,iBACpC,QAAC,QAAD;AAAU,IAAA,UAAU,EAAEA,KAAK,CAACZ,MAAD,CAA3B;AAAqC,IAAA,IAAI,EAAEY,KAAK,CAACC;AAAjD,KAA4DD,KAAK,CAACE,EAAlE;AAAA;AAAA;AAAA;AAAA,UADa,CAAjB;AAGA,sBAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEhB,KAAf;AAAsB,MAAA,WAAW,EAAEQ,WAAnC;AAAgD,MAAA,YAAY,EAAEE;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA,iBACKP,WADL,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH;;GA1BQR,O;;KAAAA,O;AA4BT,eAAeA,OAAf","sourcesContent":["import React,{useState} from 'react'\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport './Palette.css';\n\n\n\nfunction Palette(props) {\n    const [level,setlevel]=useState(500);\n    const [format,setFormat]=useState(\"hex\");\n    const {colors,paletteName,emoji}=props.palette\n    const handleSlide=(newLevel)=>{\n        setlevel(newLevel)\n    }\n    const handleFormat=(val)=>{\n         setFormat(val);\n    }\n    const colorBoxes=colors[level].map(color=>(\n        <ColorBox background={color[format]} name={color.name} key={color.id}/>\n    ))\n    return (\n\n        <div className=\"Palette\">\n            <Navbar level={level} handleSlide={handleSlide} handleChange={handleFormat}/>\n            <div className=\"Palette-colors\">\n                {colorBoxes}\n            </div>\n            <footer className=\"Palette-footer\">\n                {paletteName}\n                <span className=\"emoji\">{emoji}</span>\n            </footer>\n        </div>\n    )\n}\n\nexport default Palette\n"]},"metadata":{},"sourceType":"module"}