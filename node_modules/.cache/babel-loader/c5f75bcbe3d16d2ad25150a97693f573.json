{"ast":null,"code":"var _jsxFileName = \"/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/SingleColorPalette.js\";\nimport React, { Component } from 'react';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SingleColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this._shades = this.gather(this.props.palette, this.props.colorId);\n    this.state = {\n      format: \"hex\"\n    };\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  gather(palette, colortofilter) {\n    let shades = [];\n    let allColors = palette.colors;\n\n    for (let key in allColors) {\n      shades = shades.concat(allColors[key].filter(color => color.id === colortofilter));\n    }\n\n    return shades.splice(1);\n  }\n\n  changeFormat(val) {\n    this.setState({\n      format: val\n    });\n  }\n\n  render() {\n    const {\n      format\n    } = this.state;\n    const {\n      paletteName,\n      emoji,\n      id\n    } = this.props.palette;\n\n    const colorboxes = this._shades.map(color => /*#__PURE__*/_jsxDEV(ColorBox, {\n      name: color.name,\n      background: color[format],\n      showLink: false\n    }, color.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this));\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Single Palette\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        handleChange: this.changeFormat,\n        showing: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Palette-colors\",\n        children: [colorboxes, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"go-back ColorBox\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/palette/${id}`,\n            className: \"back-button\",\n            children: \"Go Back!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(PaletteFooter, {\n        paletteName: paletteName,\n        emoji: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SingleColorPalette;","map":{"version":3,"sources":["/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/SingleColorPalette.js"],"names":["React","Component","ColorBox","Navbar","PaletteFooter","Link","SingleColorPalette","constructor","props","_shades","gather","palette","colorId","state","format","changeFormat","bind","colortofilter","shades","allColors","colors","key","concat","filter","color","id","splice","val","setState","render","paletteName","emoji","colorboxes","map","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAa,KAAKC,MAAL,CAAY,KAAKF,KAAL,CAAWG,OAAvB,EAA+B,KAAKH,KAAL,CAAWI,OAA1C,CAAb;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAC;AADA,KAAX;AAGA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AAIDN,EAAAA,MAAM,CAACC,OAAD,EAASM,aAAT,EAAwB;AAC1B,QAAIC,MAAM,GAAC,EAAX;AACA,QAAIC,SAAS,GAACR,OAAO,CAACS,MAAtB;;AACA,SAAK,IAAIC,GAAT,IAAgBF,SAAhB,EAA2B;AACvBD,MAAAA,MAAM,GAACA,MAAM,CAACI,MAAP,CACHH,SAAS,CAACE,GAAD,CAAT,CAAeE,MAAf,CAAsBC,KAAK,IAAEA,KAAK,CAACC,EAAN,KAAWR,aAAxC,CADG,CAAP;AAGH;;AACD,WAAOC,MAAM,CAACQ,MAAP,CAAc,CAAd,CAAP;AACH;;AACDX,EAAAA,YAAY,CAACY,GAAD,EAAM;AACd,SAAKC,QAAL,CAAc;AAACd,MAAAA,MAAM,EAACa;AAAR,KAAd;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACf,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACA,UAAM;AAACiB,MAAAA,WAAD;AAAaC,MAAAA,KAAb;AAAmBN,MAAAA;AAAnB,QAAuB,KAAKjB,KAAL,CAAWG,OAAxC;;AACA,UAAMqB,UAAU,GAAC,KAAKvB,OAAL,CAAawB,GAAb,CAAiBT,KAAK,iBACnC,QAAC,QAAD;AAEI,MAAA,IAAI,EAAEA,KAAK,CAACU,IAFhB;AAGI,MAAA,UAAU,EAAEV,KAAK,CAACV,MAAD,CAHrB;AAII,MAAA,QAAQ,EAAE;AAJd,OACSU,KAAK,CAACU,IADf;AAAA;AAAA;AAAA;AAAA,YADa,CAAjB;;AAQA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKnB,YAA3B;AAAyC,QAAA,OAAO,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEK;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBACCiB,UADD,eAEA;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACG,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWP,EAAG,EAAzB;AAA4B,YAAA,SAAS,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAQK,QAAC,aAAD;AAAe,QAAA,WAAW,EAAEK,WAA5B;AAAyC,QAAA,KAAK,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,cARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhDsC;;AAoD3C,eAAezB,kBAAf","sourcesContent":["import React,{Component} from 'react'\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport {Link} from 'react-router-dom';\n\nclass SingleColorPalette extends Component {\n    constructor(props) {\n        super(props)\n        this._shades=this.gather(this.props.palette,this.props.colorId);\n        this.state={\n            format:\"hex\"\n        }\n        this.changeFormat=this.changeFormat.bind(this);\n    }\n    \n\n\n    gather(palette,colortofilter) {\n        let shades=[];\n        let allColors=palette.colors;\n        for (let key in allColors) {\n            shades=shades.concat(\n                allColors[key].filter(color=>color.id===colortofilter)\n            )\n        }\n        return shades.splice(1);\n    }\n    changeFormat(val) {\n        this.setState({format:val})\n    }\n    render() {\n        const {format}=this.state;\n        const {paletteName,emoji,id}=this.props.palette;\n        const colorboxes=this._shades.map(color=>(\n            <ColorBox \n                key={color.name}\n                name={color.name}\n                background={color[format]}\n                showLink={false}\n            /> \n        ))\n        return (\n            <div className='Single Palette'>\n                <Navbar handleChange={this.changeFormat} showing={false}/>\n                 <div className='Palette-colors'>\n                 {colorboxes}\n                 <div className=\"go-back ColorBox\">\n                    <Link to={`/palette/${id}`} className='back-button'>Go Back!</Link>\n                 </div>\n                 </div>\n                 <PaletteFooter paletteName={paletteName} emoji={emoji}/>\n            </div>\n        )\n    }\n    \n}\n\nexport default SingleColorPalette\n"]},"metadata":{},"sourceType":"module"}