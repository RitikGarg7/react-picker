{"ast":null,"code":"var _jsxFileName = \"/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/NewPaletteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { ChromePicker } from 'react-color';\nimport Button from '@material-ui/core/Button';\nimport DraggableColorBox from './DraggableColorBox'; // import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 400;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction NewPaletteForm() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [colors, setColors] = useState([\"purple\", \"#e15764\"]);\n  const [currentcolor, setCurrent] = useState([{\n    color: 'blue',\n    name: 'blue'\n  }]);\n  const [newName, setnewName] = useState(\"\");\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const updateCurrentColor = newcolor => {\n    setCurrent(newcolor.hex);\n  };\n\n  const addnewColors = () => {\n    const newcolor = {\n      color: currentcolor,\n      name: newName\n    };\n    setColors([...colors, newcolor]);\n  };\n\n  const handleChange = evt => {\n    setnewName(evt.target.value);\n  };\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"isColorNameUnique\", value => color.every(({\n      name\n    }) => name.toLowerCase() !== value.toLowerCase()));\n    ValidatorForm.addValidationRule(\"isColorUnique\", value => ({\n      color\n    }) => color != currentcolor);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, open && classes.hide),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Persistent drawer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Design your Palette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Clear Palette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Random Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: currentcolor,\n        onChangeComplete: newcolor => updateCurrentColor(newcolor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          value: newName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          color: \"primary\",\n          style: {\n            background: currentcolor\n          },\n          children: \"Add Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: clsx(classes.content, {\n        [classes.contentShift]: open\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), colors.map(color => /*#__PURE__*/_jsxDEV(DraggableColorBox, {\n        color: color.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 14\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewPaletteForm, \"whexXsDJc4QnsQG0LslsCGm/CAg=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = NewPaletteForm;\nexport default NewPaletteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPaletteForm\");","map":{"version":3,"sources":["/Users/ritik/Desktop/colt-steele/Reactjs/WithReact/L-24,31 color-app/color-app/src/NewPaletteForm.js"],"names":["React","useState","useEffect","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChromePicker","Button","DraggableColorBox","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","height","contentShift","NewPaletteForm","classes","open","setOpen","colors","setColors","currentcolor","setCurrent","color","name","newName","setnewName","handleDrawerOpen","handleDrawerClose","updateCurrentColor","newcolor","hex","addnewColors","handleChange","evt","target","value","ValidatorForm","addValidationRule","every","toLowerCase","paper","background","map"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'; \nimport {ChromePicker} from 'react-color';\nimport Button from '@material-ui/core/Button';\nimport DraggableColorBox from './DraggableColorBox';\n// import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst drawerWidth = 400;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1, \n    height:\"100vh\",\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction NewPaletteForm() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [colors,setColors]=useState([\"purple\",\"#e15764\"])\n    const [currentcolor,setCurrent]=useState([{color:'blue',name:'blue'}]);\n    const [newName,setnewName]=useState(\"\");\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const updateCurrentColor=(newcolor)=>{\n        setCurrent(newcolor.hex);\n    }\n    const addnewColors=()=>{\n        const newcolor={\n            color:currentcolor,\n            name:newName\n        }\n        setColors([...colors,newcolor]);\n    }\n    const handleChange=(evt)=>{\n        setnewName(evt.target.value)\n    }\n    useEffect(()=>{\n        ValidatorForm.addValidationRule(\"isColorNameUnique\",value=>\n            color.every(\n                ({name})=>name.toLowerCase()!==value.toLowerCase()\n            )\n        );\n        ValidatorForm.addValidationRule(\"isColorUnique\",value=>\n                ({color})=>color!=currentcolor\n        );\n    }\n    )\n    return (\n        <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Persistent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n             <ChevronLeftIcon /> \n          </IconButton>\n        </div>\n        <Divider />\n        <Typography variant='h4'>Design your Palette</Typography>\n        <div>\n            <Button variant='contained' color='secondary'>Clear Palette</Button>\n            <Button variant='contained' color='primary'>Random Color</Button>\n\n        </div>\n        <ChromePicker color={currentcolor} onChangeComplete={(newcolor)=>updateCurrentColor(newcolor)}/>\n        <ValidatorForm>\n        <TextValidator value={newName} onChange={handleChange}/>\n        <Button \n            variant='contained' \n            type='submit'\n            color='primary' \n            style={{background:currentcolor}} \n            >Add Color</Button>\n        </ValidatorForm>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} /> \n         {colors.map(color=>(\n             <DraggableColorBox color={color.color}/>\n         ))} \n      </main>\n    </div>\n    )\n}\n\nexport default NewPaletteForm\n"]},"metadata":{},"sourceType":"module"}