{"ast":null,"code":"var _jsxFileName = \"/Users/ritik/Desktop/Projects/React_projects/color-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\"; // import './App.css';\n\nimport React, { useState } from 'react';\nimport Palette from './Palette';\nimport { Route, Switch } from \"react-router-dom\";\nimport colorsData from './colorsData';\nimport { generatePalette } from './colorHelpers';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [palettes, setPalettes] = useState(colorsData);\n\n  const findPalette = id => {\n    console.log(palettes);\n    return palettes.find(function (palette) {\n      return palette.id === id;\n    });\n  };\n\n  const deletePalette = id => {};\n\n  const savePalette = newPalette => {\n    console.log(newPalette);\n    setPalettes([...palettes, newPalette]);\n    console.log(palettes);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   <Palette palette={generatePalette(colorsData[4])}/>\n    // </div>\n    _jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: routeProps => /*#__PURE__*/_jsxDEV(PaletteList, {\n          palettes: palettes,\n          ...routeProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/palette/new\",\n        render: routeProps => /*#__PURE__*/_jsxDEV(NewPaletteForm, {\n          savePalette: savePalette,\n          ...routeProps,\n          palettes: palettes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/palette/:id\",\n        render: routeProps => /*#__PURE__*/_jsxDEV(Palette, {\n          palette: generatePalette(findPalette(routeProps.match.params.id))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: routeProps => /*#__PURE__*/_jsxDEV(SingleColorPalette, {\n          colorId: routeProps.match.params.colorId,\n          palette: generatePalette(findPalette(routeProps.match.params.paletteId))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"v1+ecRe9zFdT8/84kF3szwXcQ7Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ritik/Desktop/Projects/React_projects/color-app/src/App.js"],"names":["React","useState","Palette","Route","Switch","colorsData","generatePalette","PaletteList","SingleColorPalette","NewPaletteForm","App","palettes","setPalettes","findPalette","id","console","log","find","palette","deletePalette","savePalette","newPalette","routeProps","match","params","colorId","paletteId"],"mappings":";;;+BACA;;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBX,QAAQ,CAACI,UAAD,CAArC;;AACA,QAAMQ,WAAW,GAAEC,EAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAOA,QAAQ,CAACM,IAAT,CAAc,UAASC,OAAT,EAAkB;AACrC,aAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;AACD,KAFM,CAAP;AAGD,GALD;;AAOA,QAAMK,aAAa,GAAEL,EAAD,IAAO,CAE1B,CAFD;;AAIA,QAAMM,WAAW,GAAEC,UAAD,IAAc;AAC9BN,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACAT,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaU,UAAb,CAAD,CAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,GAJD;;AAMA;AAAA;AACE;AACA;AACA;AACA,YAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAGW,UAAD,iBAAc,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEX,QAAvB;AAAA,aAAqCW;AAArC;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,cAAlB;AAAiC,QAAA,MAAM,EAAGA,UAAD,iBAAc,QAAC,cAAD;AAAgB,UAAA,WAAW,EAAEF,WAA7B;AAAA,aAA+CE,UAA/C;AAA2D,UAAA,QAAQ,EAAEX;AAArE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AACU,QAAA,IAAI,EAAC,cADf;AAEM,QAAA,MAAM,EAAEW,UAAU,iBACR,QAAC,OAAD;AACE,UAAA,OAAO,EAAEhB,eAAe,CACtBO,WAAW,CAACS,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBV,EAAzB,CADW;AAD1B;AAAA;AAAA;AAAA;AAAA;AAHhB;AAAA;AAAA;AAAA;AAAA,cAHF,eAcE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,8BAAlB;AACI,QAAA,MAAM,EAAEQ,UAAU,iBACN,QAAC,kBAAD;AACA,UAAA,OAAO,EAAEA,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBC,OADjC;AAEE,UAAA,OAAO,EAAEnB,eAAe,CACtBO,WAAW,CAACS,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBE,SAAzB,CADW;AAF1B;AAAA;AAAA;AAAA;AAAA;AAFhB;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AA+BD;;GAlDQhB,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\n// import './App.css';\nimport React,{useState} from 'react';\nimport Palette from './Palette';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport colorsData from './colorsData';\nimport {generatePalette} from './colorHelpers';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nfunction App() {\n  const [palettes,setPalettes]=useState(colorsData);\n  const findPalette=(id)=> {\n    console.log(palettes);\n    return palettes.find(function(palette) {\n      return palette.id === id;\n    });\n  }\n\n  const deletePalette=(id)=> {\n     \n  }\n\n  const savePalette=(newPalette)=>{\n    console.log(newPalette);\n    setPalettes([...palettes,newPalette])\n    console.log(palettes);\n  }\n\n  return (\n    // <div className=\"App\">\n    //   <Palette palette={generatePalette(colorsData[4])}/>\n    // </div>\n    <Switch>\n      <Route exact path='/' render={(routeProps)=><PaletteList palettes={palettes} {...routeProps} />}></Route>\n      <Route exact path=\"/palette/new\" render={(routeProps)=><NewPaletteForm savePalette={savePalette}  {...routeProps} palettes={palettes}/>}></Route>\n      <Route\n          exact path='/palette/:id'\n            render={routeProps => ( \n                      <Palette\n                        palette={generatePalette(\n                          findPalette(routeProps.match.params.id)\n                        )}\n                      /> \n                )}\n                />\n      \n      <Route exact path='/palette/:paletteId/:colorId' \n          render={routeProps => ( \n                      <SingleColorPalette\n                      colorId={routeProps.match.params.colorId}\n                        palette={generatePalette(\n                          findPalette(routeProps.match.params.paletteId)\n                        )}\n                      /> \n                  )}></Route>\n\n    </Switch>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}