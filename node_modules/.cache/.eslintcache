[{"/Users/ritik/Desktop/Projects/React_projects/color-app/src/index.js":"1","/Users/ritik/Desktop/Projects/React_projects/color-app/src/App.js":"2","/Users/ritik/Desktop/Projects/React_projects/color-app/src/reportWebVitals.js":"3","/Users/ritik/Desktop/Projects/React_projects/color-app/src/colorHelpers.js":"4","/Users/ritik/Desktop/Projects/React_projects/color-app/src/colorsData.js":"5","/Users/ritik/Desktop/Projects/React_projects/color-app/src/Palette.js":"6","/Users/ritik/Desktop/Projects/React_projects/color-app/src/PaletteList.js":"7","/Users/ritik/Desktop/Projects/React_projects/color-app/src/SingleColorPalette.js":"8","/Users/ritik/Desktop/Projects/React_projects/color-app/src/NewPaletteForm.js":"9","/Users/ritik/Desktop/Projects/React_projects/color-app/src/ColorBox.js":"10","/Users/ritik/Desktop/Projects/React_projects/color-app/src/Navbar.js":"11","/Users/ritik/Desktop/Projects/React_projects/color-app/src/PaletteFooter.js":"12","/Users/ritik/Desktop/Projects/React_projects/color-app/src/MiniPalette.js":"13","/Users/ritik/Desktop/Projects/React_projects/color-app/src/DragableColorList.js":"14","/Users/ritik/Desktop/Projects/React_projects/color-app/src/DraggableColorBox.js":"15"},{"size":544,"mtime":1619160982374,"results":"16","hashOfConfig":"17"},{"size":1973,"mtime":1621226657726,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1618898427722,"results":"19","hashOfConfig":"17"},{"size":1159,"mtime":1619117389260,"results":"20","hashOfConfig":"17"},{"size":10284,"mtime":1619107234348,"results":"21","hashOfConfig":"17"},{"size":1103,"mtime":1619208297239,"results":"22","hashOfConfig":"17"},{"size":845,"mtime":1619371827845,"results":"23","hashOfConfig":"17"},{"size":1753,"mtime":1619209927546,"results":"24","hashOfConfig":"17"},{"size":11119,"mtime":1620478885968,"results":"25","hashOfConfig":"17"},{"size":1366,"mtime":1619206697651,"results":"26","hashOfConfig":"17"},{"size":2684,"mtime":1619207896739,"results":"27","hashOfConfig":"17"},{"size":274,"mtime":1619208052793,"results":"28","hashOfConfig":"17"},{"size":925,"mtime":1621226324244,"results":"29","hashOfConfig":"17"},{"size":505,"mtime":1619629142263,"results":"30","hashOfConfig":"17"},{"size":1344,"mtime":1619759425172,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"qsii4n",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/ritik/Desktop/Projects/React_projects/color-app/src/index.js",[],["68","69"],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/App.js",["70","71"],"import logo from './logo.svg';\n// import './App.css';\nimport React,{useState} from 'react';\nimport Palette from './Palette';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport colorsData from './colorsData';\nimport {generatePalette} from './colorHelpers';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nfunction App() {\n  const [palettes,setPalettes]=useState(colorsData);\n  const findPalette=(id)=> {\n    console.log(palettes);\n    return palettes.find(function(palette) {\n      return palette.id === id;\n    });\n  }\n\n  const deletePalette=(id)=> {\n     \n  }\n\n  const savePalette=(newPalette)=>{\n    console.log(newPalette);\n    setPalettes([...palettes,newPalette])\n    console.log(palettes);\n  }\n\n  return (\n    // <div className=\"App\">\n    //   <Palette palette={generatePalette(colorsData[4])}/>\n    // </div>\n    <Switch>\n      <Route exact path='/' render={(routeProps)=><PaletteList palettes={palettes} {...routeProps} />}></Route>\n      <Route exact path=\"/palette/new\" render={(routeProps)=><NewPaletteForm savePalette={savePalette}  {...routeProps} palettes={palettes}/>}></Route>\n      <Route\n          exact path='/palette/:id'\n            render={routeProps => ( \n                      <Palette\n                        palette={generatePalette(\n                          findPalette(routeProps.match.params.id)\n                        )}\n                      /> \n                )}\n                />\n      \n      <Route exact path='/palette/:paletteId/:colorId' \n          render={routeProps => ( \n                      <SingleColorPalette\n                      colorId={routeProps.match.params.colorId}\n                        palette={generatePalette(\n                          findPalette(routeProps.match.params.paletteId)\n                        )}\n                      /> \n                  )}></Route>\n\n    </Switch>\n\n  );\n}\n\nexport default App;\n","/Users/ritik/Desktop/Projects/React_projects/color-app/src/reportWebVitals.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/colorHelpers.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/colorsData.js",["72"],"\nexport default [\n    {\n      paletteName: \"Material UI Colors\",\n      id: \"material-ui-colors\",\n      emoji: \"ðŸŽ¨\",\n      colors: [\n        { name: \"red\", color: \"#F44336\" },\n        { name: \"pink\", color: \"#E91E63\" },\n        { name: \"purple\", color: \"#9C27B0\" },\n        { name: \"deeppurple\", color: \"#673AB7\" },\n        { name: \"indigo\", color: \"#3F51B5\" },\n        { name: \"blue\", color: \"#2196F3\" },\n        { name: \"lightblue\", color: \"#03A9F4\" },\n        { name: \"cyan\", color: \"#00BCD4\" },\n        { name: \"teal\", color: \"#009688\" },\n        { name: \"green\", color: \"#4CAF50\" },\n        { name: \"lightgreen\", color: \"#8BC34A\" },\n        { name: \"lime\", color: \"#CDDC39\" },\n        { name: \"yellow\", color: \"#FFEB3B\" },\n        { name: \"amber\", color: \"#FFC107\" },\n        { name: \"orange\", color: \"#FF9800\" },\n        { name: \"deeporange\", color: \"#FF5722\" },\n        { name: \"brown\", color: \"#795548\" },\n        { name: \"grey\", color: \"#9E9E9E\" },\n        { name: \"bluegrey\", color: \"#607D8B\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors v1\",\n      id: \"flat-ui-colors-v1\",\n      emoji: \"ðŸ¤™\",\n      colors: [\n        { name: \"Turquoise\", color: \"#1abc9c\" },\n        { name: \"Emerald\", color: \"#2ecc71\" },\n        { name: \"PeterRiver\", color: \"#3498db\" },\n        { name: \"Amethyst\", color: \"#9b59b6\" },\n        { name: \"WetAsphalt\", color: \"#34495e\" },\n        { name: \"GreenSea\", color: \"#16a085\" },\n        { name: \"Nephritis\", color: \"#27ae60\" },\n        { name: \"BelizeHole\", color: \"#2980b9\" },\n        { name: \"Wisteria\", color: \"#8e44ad\" },\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\n        { name: \"SunFlower\", color: \"#f1c40f\" },\n        { name: \"Carrot\", color: \"#e67e22\" },\n        { name: \"Alizarin\", color: \"#e74c3c\" },\n        { name: \"Clouds\", color: \"#ecf0f1\" },\n        { name: \"Concrete\", color: \"#95a5a6\" },\n        { name: \"Orange\", color: \"#f39c12\" },\n        { name: \"Pumpkin\", color: \"#d35400\" },\n        { name: \"Pomegranate\", color: \"#c0392b\" },\n        { name: \"Silver\", color: \"#bdc3c7\" },\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Dutch\",\n      id: \"flat-ui-colors-dutch\",\n      emoji: \"ðŸ‡³ðŸ‡±\",\n      colors: [\n        { name: \"Sunflower\", color: \"#FFC312\" },\n        { name: \"Energos\", color: \"#C4E538\" },\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\n        { name: \"BaraRose\", color: \"#ED4C67\" },\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\n        { name: \"LavenderTea\", color: \"#D980FA\" },\n        { name: \"VerryBerry\", color: \"#B53471\" },\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\n        { name: \"PixelatedGrass\", color: \"#009432\" },\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\n        { name: \"HollyHock\", color: \"#833471\" },\n        { name: \"RedPigment\", color: \"#EA2027\" },\n        { name: \"TurkishAqua\", color: \"#006266\" },\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors American\",\n      id: \"flat-ui-colors-american\",\n      emoji: \"ðŸ‡ºðŸ‡¸\",\n      colors: [\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n        { name: \"FadedPoster\", color: \"#81ecec\" },\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\n        { name: \"CityLights\", color: \"#dfe6e9\" },\n        { name: \"MintLeaf\", color: \"#00b894\" },\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\n        { name: \"FirstDate\", color: \"#fab1a0\" },\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\n        { name: \"AmericanRiver\", color: \"#636e72\" },\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n        { name: \"OrangeVille\", color: \"#e17055\" },\n        { name: \"Chi-Gong\", color: \"#d63031\" },\n        { name: \"PrunusAvium\", color: \"#e84393\" },\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Aussie\",\n      id: \"flat-ui-colors-aussie\",\n      emoji: \"ðŸ‡¦ðŸ‡º\",\n      colors: [\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\n        { name: \"JuneBud\", color: \"#badc58\" },\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n        { name: \"Turbo\", color: \"#f9ca24\" },\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\n        { name: \"PureApple\", color: \"#6ab04c\" },\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\n        { name: \"Heliotrope\", color: \"#e056fd\" },\n        { name: \"ExodusFruit\", color: \"#686de0\" },\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n        { name: \"SteelPink\", color: \"#be2edd\" },\n        { name: \"Blurple\", color: \"#4834d4\" },\n        { name: \"DeepCove\", color: \"#130f40\" },\n        { name: \"WizardGrey\", color: \"#535c68\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors British\",\n      id: \"flat-ui-colors-british\",\n      emoji: \"ðŸ‡¬ðŸ‡§\",\n      colors: [\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\n        { name: \"Seabrook\", color: \"#487eb0\" },\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\n        { name: \"Naval\", color: \"#40739e\" },\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n        { name: \"MazarineBlue\", color: \"#273c75\" },\n        { name: \"BlueNights\", color: \"#353b48\" },\n        { name: \"HarleyOrange\", color: \"#c23616\" },\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\n        { name: \"ChainGangGrey\", color: \"#718093\" },\n        { name: \"PicoVoid\", color: \"#192a56\" },\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Spanish\",\n      id: \"flat-ui-colors-spanish\",\n      emoji: \"ðŸ‡ªðŸ‡¸\",\n      colors: [\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\n        { name: \"C64Purple\", color: \"#706fd3\" },\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\n        { name: \"SummerSky\", color: \"#34ace0\" },\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\n        { name: \"Liberty\", color: \"#474787\" },\n        { name: \"HotStone\", color: \"#aaa69d\" },\n        { name: \"DevilBlue\", color: \"#227093\" },\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\n        { name: \"ChileanFire\", color: \"#cd6133\" },\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n        { name: \"Desert\", color: \"#ccae62\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Indian\",\n      id: \"flat-ui-colors-indian\",\n      emoji: \"ðŸ‡®ðŸ‡³\",\n      colors: [\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\n        { name: \"RichGardenia\", color: \"#F97F51\" },\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\n        { name: \"Keppel\", color: \"#58B19F\" },\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\n        { name: \"BlueBell\", color: \"#3B3B98\" },\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n        { name: \"OasisStream\", color: \"#9AECDB\" },\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\n        { name: \"PineGlade\", color: \"#BDC581\" },\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors French\",\n      id: \"flat-ui-colors-french\",\n      emoji: \"ðŸ‡«ðŸ‡·\",\n      colors: [\n        { name: \"FlatFlesh\", color: \"#fad390\" },\n        { name: \"MelonMelody\", color: \"#f8c291\" },\n        { name: \"Livid\", color: \"#6a89cc\" },\n        { name: \"Spray\", color: \"#82ccdd\" },\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\n        { name: \"MandarinRed\", color: \"#e55039\" },\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\n        { name: \"Dupain\", color: \"#60a3bc\" },\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\n        { name: \"Waterfall\", color: \"#38ada9\" },\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\n        { name: \"JalapenoRed\", color: \"#b71540\" },\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\n        { name: \"ReefEncounter\", color: \"#079992\" }\n      ]\n    }\n  ];","/Users/ritik/Desktop/Projects/React_projects/color-app/src/Palette.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/PaletteList.js",["73"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MiniPalette from './MiniPalette' \n\nimport './PaletteList.css';\n \nfunction PaletteList(props) {\n    const {palettes}=props;\n    const gotoPalette=(id)=>{\n        props.history.push(`/palette/${id}`);\n    }\n    return (\n        <div className=\"root-dash\">\n            <div className=\"container\">\n                <nav className=\"nav\">\n                    <h1>React Colors</h1>\n                    <Link to=\"/palette/new\">Create new Palette</Link>\n                </nav>\n                <div className=\"palettes\">\n                    {palettes.map(p=>( \n                        <MiniPalette {...p} handleClick={()=>gotoPalette(p.id)}/> \n                    ))}\n                </div>\n            </div>  \n        </div>\n    )\n}\n\n\n \nexport default PaletteList\n","/Users/ritik/Desktop/Projects/React_projects/color-app/src/SingleColorPalette.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/NewPaletteForm.js",["74","75","76","77","78","79","80"],"import React,{useState,useEffect} from 'react';\nimport clsx from 'clsx';\nimport {Link} from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'; \nimport {ChromePicker} from 'react-color';\nimport Button from '@material-ui/core/Button';\nimport DragableColorList from './DragableColorList';\nimport {arrayMove} from 'react-sortable-hoc'; \nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// import { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport {Picker} from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css'; \n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    flexDirection:'row',\n    justifyContent:'space-between',\n    height:'64px',\n    alignItems:'center'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    display:'flex',\n    alignItems:'center'\n  },\n  drawerHeader: { \n    display: 'flex',\n    alignItems: 'center',\n    width:'100%',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1, \n    height:`92vh`,\n    padding: 0,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  container:{\n      display:'flex',\n      flexDirection:'column',\n      width:'90%',\n      height:'100%',\n      justifyContent:'center',\n      alignItems:'center'\n  },\n  picker:{\n      width:'100% !important',\n      marginTop:'2rem !important',\n\n  },\n  addColor:{\n      width:'90%',\n        padding:'1rem',\n        marginTop:'1rem',\n        fontSize:'2rem'\n  },\n  colorNameInput:{\n      width:'90%',\n      marginTop:'1rem'\n  },\n  buttons:{\n      width:'100%',\n      marginBottom:'1rem',\n      display:'flex',\n      justifyContent:'space-between'\n  },\n  button:{\n      width:'48%'\n  },\n  navBtns:{\n    marginRight:'1 rem',\n\n  },\n  btn:{\n    margin:'0 0.5rem',\n    textDecoration:'none'\n  },\n  link:{\n    textDecoration:'none'\n  },\n  ritik:{\n    display:'flex',\n    flexDirection:'column'\n  }\n}));\n\nfunction NewPaletteForm(props) {\n    console.log(props);\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [colors,setColors]=useState(props.palettes[0].colors)\n    const [currentcolor,setCurrent]=useState(\"teal\");\n    const [newColorName,setnewColorName]=useState(\"\");\n    const [newPaletteName,setnewPaletteName]=useState(\"\");\n    const paletteFull=colors.length>=20;\n    const [open2, setOpen2] = useState(false);\n    const [formShowing,setformShowing]=useState(false);\n    const [emoji,setEmoji]=useState('');\n    const [openSnack,setOpenSnack]=useState(false);\n    const  closeSnackbar=() =>{\n      setOpenSnack(false);\n  }\n\n    const handleClickOpen = () => {\n      setOpen2(true);\n      setformShowing(true);\n    };\n  \n    const handleClose = () => {\n      setOpen2(false);\n      setformShowing(true);\n\n    };\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const updateCurrentColor=(newcolor)=>{\n        setCurrent(newcolor.hex);\n    }\n    const addnewColors=()=>{\n        const newcolor={\n            name:newColorName,\n            color:currentcolor  \n        }\n        setColors([...colors,newcolor]);\n        setnewColorName(\"\");\n    }\n\n    const handleChange1=(evt)=>{\n        setnewColorName(evt.target.value);\n    }\n    const handleChange2=(evt)=>{\n        //console.log(evt);\n        setnewPaletteName(evt.target.value);\n    }\n    const savePalette=()=>{\n        let newName=newPaletteName;\n        const newPalette={\n            emoji:emoji,\n            paletteName:newName,\n            id:newName.toLowerCase().replace(/ /g,\"-\"),\n            colors:colors\n        };\n        props.savePalette(newPalette); \n        props.history.push(\"/\");\n    }\n\n    const handleNewName=()=>{\n        setnewPaletteName(newPaletteName);\n    }\n    const removeColor=(colorName)=>{\n        const remaining=colors.filter(color=>color.name!==colorName);\n         setColors(remaining)\n    } \n    const onSortEnd = ({ oldIndex, newIndex }) => setColors(arrayMove(colors, oldIndex, newIndex));\n    const clearPalette=()=>{\n        setColors([]);\n    }\n\n    const addRandom=()=>{\n        const allColors = props.palettes.map(p => p.colors).flat();\n        \n        let rand = Math.floor(Math.random() * allColors.length);\n        let randomColor = allColors[rand];\n        \n        setColors([...colors, randomColor] );\n    } \n\n    const selectEmoji=(mystery)=>{\n      // setOpenSnack(true);\n      setEmoji(mystery.native);\n    }\n    return (\n        <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color='default'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Create a Palette \n          </Typography>\n          \n        </Toolbar>\n        <div className={classes.navBtns}> \n           { formShowing && <div>\n             \n              <Dialog open={open2} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <form onSubmit={savePalette}> \n                <DialogContent className={classes.ritik}>\n                  <DialogContentText>\n                    Enter a name to save your Palette !\n                  </DialogContentText>\n                  <Picker onSelect={selectEmoji} title=\"Pick a Palette Emoji\"/>\n  {/* * * * * * * * * * <input value={newPaletteName} onChange={handleChange2} name='newPaletteName'></input> */}\n                  <TextField \n                    id=\"ritik\" \n                    label=\"newPaletteName\" \n                    variant=\"filled\"  \n                    style={{marginTop:'1rem'}}\n                    value={newPaletteName} \n                    onChange={handleChange2} name='newPaletteName'/>\n                  \n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button \n                        variant='contained'  \n                        color='primary' type='submit'>Save Palette</Button>\n                </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n           }\n           \n           \n\n            <Link to=\"/\"  className={classes.link}>\n                <Button variant='contained'  \n                color='secondary' className={classes.btn} >Go Back</Button>\n            </Link>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} className={classes.btn}>\n                Save\n              </Button>\n\n        </div>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n             <ChevronLeftIcon /> \n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.container}>\n        <Typography variant='h4' gutterBottom>Design your Palette</Typography>\n\n        <div className={classes.buttons}>\n            <Button className={classes.button} variant='contained' color='secondary' onClick={clearPalette}>Clear Palette</Button>\n            <Button className={classes.button} variant='contained' color='primary' onClick={addRandom}>Random Color</Button>\n\n        </div>\n        <ChromePicker  style={{'width':'100% !important'}}\n            classname={classes.picker}\n            color={currentcolor} \n            onChangeComplete={(newcolor)=>updateCurrentColor(newcolor)} \n            /> \n        <TextField \n            id=\"filled-basic\" \n            label=\"newColorName\" \n            variant=\"filled\" \n            className={classes.colorNameInput} \n            value={newColorName} \n            onChange={handleChange1} name='newColorName'/>\n        <Button \n            variant='contained' \n            //  type='submit' \n            className={classes.addColor}\n            onClick={addnewColors}\n            color='primary' \n            style={{background:paletteFull?\"grey\":currentcolor}} \n            disabled={paletteFull}>\n            {paletteFull?\"Palette Full\":\"Add Color\"}\n            </Button>\n            </div>\n        {/* </form> */}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} /> \n         <DragableColorList \n            colors={colors} \n            removeColor={removeColor}\n            axis='xy'\n            onSortEnd={onSortEnd}\n            />\n\n\n      </main>\n       \n    </div>\n    )\n}\n\nexport default NewPaletteForm\n","/Users/ritik/Desktop/Projects/React_projects/color-app/src/ColorBox.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/Navbar.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/PaletteFooter.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/MiniPalette.js",["81"],"\n\n\nimport React from 'react'\nimport './MiniPalette.css';\nimport DeleteIcon from '@material-ui/icons/Delete';\nfunction MiniPalette(props) {\n    const {classes,paletteName,emoji,colors}=props;\n    const miniBoxes=colors.map(color=>(\n        <div className=\"mini-color\" style={{backgroundColor:color.color}} key={color.name}></div>\n    ))\n    const deletePalette=(e)=>{\n        e.stopPropagation();\n        alert('hi');\n    }\n    \n    return ( \n        <div className=\"root\" onClick={props.handleClick}> \n            <DeleteIcon \n                className=\"deleteIcon\" \n                style={{'transition':'all 0.3s ease-in-out'}}\n                onClick={deletePalette}\n                />\n        \n            <div className=\"colors\"> \n                {miniBoxes}\n            </div>\n            <h5 className=\"title\">{paletteName} <span className=\"emoji\">{emoji}</span></h5>\n        </div>\n    )\n}\n\nexport default MiniPalette\n","/Users/ritik/Desktop/Projects/React_projects/color-app/src/DragableColorList.js",[],"/Users/ritik/Desktop/Projects/React_projects/color-app/src/DraggableColorBox.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":21,"column":9,"nodeType":"88","messageId":"89","endLine":21,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":2,"column":1,"nodeType":"93","endLine":245,"endColumn":5},{"ruleId":"86","severity":1,"message":"94","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"95","line":1,"column":24,"nodeType":"88","messageId":"89","endLine":1,"endColumn":33},{"ruleId":"86","severity":1,"message":"96","line":24,"column":8,"nodeType":"88","messageId":"89","endLine":24,"endColumn":16},{"ruleId":"86","severity":1,"message":"97","line":25,"column":8,"nodeType":"88","messageId":"89","endLine":25,"endColumn":17},{"ruleId":"86","severity":1,"message":"98","line":148,"column":11,"nodeType":"88","messageId":"89","endLine":148,"endColumn":16},{"ruleId":"86","severity":1,"message":"99","line":158,"column":12,"nodeType":"88","messageId":"89","endLine":158,"endColumn":21},{"ruleId":"86","severity":1,"message":"100","line":159,"column":12,"nodeType":"88","messageId":"89","endLine":159,"endColumn":25},{"ruleId":"86","severity":1,"message":"101","line":212,"column":11,"nodeType":"88","messageId":"89","endLine":212,"endColumn":24},{"ruleId":"86","severity":1,"message":"102","line":8,"column":12,"nodeType":"88","messageId":"89","endLine":8,"endColumn":19},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'deletePalette' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'useEffect' is defined but never used.","'Snackbar' is defined but never used.","'CloseIcon' is defined but never used.","'theme' is assigned a value but never used.","'openSnack' is assigned a value but never used.","'closeSnackbar' is assigned a value but never used.","'handleNewName' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]